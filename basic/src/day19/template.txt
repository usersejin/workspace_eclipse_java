1. 변수 선언
String driver = "oracle.jdbc.driver.OracleDriver"; 
String url = "jdbc:oracle:thin:@localhost:1521:xe"; 
String user = "scott";
String password = "tiger";
Connection conn = null; 

2. 드라이버 로딩
try {
			Class.forName(driver);
			
3. 연결 (Connection)
			conn = DriverManager.getConnection(url, user, password);
			System.out.println("conn : " + conn);
		} catch (ClassNotFoundException e) {
			System.out.println("드라이버 로딩 실패");
		} catch (SQLException e) {
			System.out.println("DB 연결 실패");
			e.printStackTrace();
		}

4. SQL 문 작성
String sql = "SELECT * FROM DEPT";
		ResultSet rs = null; // 8번에서도 사용할 수 있도록 전여변수로 선언
		PreparedStatement pstmt = null;

		try {
		
5. 문장 객체 생성
			pstmt = conn.prepareStatement(sql);
			
6. 실행 (select ==> ResultSet 객체)
			rs = pstmt.executeQuery(); 
			System.out.println("rs : " + rs);
			
7. 레코드별 로직 처리 : db row, 프로그램 레코드
			while (rs.next()) { // next() 가 false가 될 때까지 (칼럼의 끝을 만날 때 까지) 반복
							int deptno = rs.getInt("deptno");
							String dname = rs.getString("dname");
							String loc = rs.getString("loc");
							System.out.println(deptno + " : " + dname + " : " + loc);
						}
		} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	} finally {
	
8. 자원반납
				try {
								if (rs != null)
									rs.close();
								if (pstmt != null)
									pstmt.close();
								if (conn != null)
									conn.close();
							} catch (SQLException e) {
								// TODO Auto-generated catch block
								e.printStackTrace();
							}
		}
	}

}